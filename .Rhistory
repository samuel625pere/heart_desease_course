usethis::use_git_config(user.name = "samuel625pere", user.email = "samuelalter625@gmail.com")
install.packages(c("usethis", "gitcreds", "gh"))
usethis::use_git_config(user.name = "samuel625pere", user.email = "samuelalter625@gmail.com")
pat <- usethis::create_github_token()
gitcreds::gitcreds_set(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)
gitcreds::gitcreds_set("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")
gitcreds::gitcreds_set()
gh::gh_whoami()
rm(pat)
source('~/Heart desease project/Script.R', echo=TRUE)
View(heart_data)
source('~/Heart desease project/Script.R', encoding = 'UTF-8', echo=TRUE)
source('~/Heart desease project/Script.R', encoding = 'UTF-8', echo=TRUE)
?replace()
source('~/Heart desease project/Script.R', encoding = 'UTF-8', echo=TRUE)
source('~/Heart desease project/Script.R', encoding = 'UTF-8', echo=TRUE)
View(heart_data)
class(heart_data$sex)
?levels
levels(heart_data$sex)
source('~/Heart desease project/Script.R', encoding = 'UTF-8', echo=TRUE)
levels(heart_data$sex)
View(heart_data)
View(heart_data)
class(heart_data$exang)
source('~/Heart desease project/Script.R', encoding = 'UTF-8', echo=TRUE)
source('~/Heart desease project/Script.R', encoding = 'UTF-8', echo=TRUE)
source('~/Heart desease project/Script.R', encoding = 'UTF-8', echo=TRUE)
View(test_set)
View(train_set)
install.packages("rpart")
install.packages("Rborist")
install.packages("randomForest")
source('~/Heart desease project/Script.R', encoding = 'UTF-8', echo=TRUE)
summary(heart_data)
source('~/Heart desease project/Script.R', encoding = 'UTF-8', echo=TRUE)
source('~/Heart desease project/Script.R', encoding = 'UTF-8', echo=TRUE)
source('~/Heart desease project/Script.R', encoding = 'UTF-8', echo=TRUE)
source('~/Heart desease project/Script.R', encoding = 'UTF-8', echo=TRUE)
warnings()
source('~/Heart desease project/Script.R', encoding = 'UTF-8', echo=TRUE)
warnings()
source('~/Heart desease project/Script.R', encoding = 'UTF-8', echo=TRUE)
warnings()
source('~/Heart desease project/Script.R', encoding = 'UTF-8', echo=TRUE)
install.packages("randomForest")
install.packages("randomForest")
install.packages("randomForest")
source('~/Heart desease project/Script.R', encoding = 'UTF-8', echo=TRUE)
source('~/Heart desease project/Script.R', encoding = 'UTF-8', echo=TRUE)
source('~/Heart desease project/Script.R', encoding = 'UTF-8', echo=TRUE)
source('~/Heart desease project/Script.R', encoding = 'UTF-8', echo=TRUE)
source('~/Heart desease project/Script.R', encoding = 'UTF-8', echo=TRUE)
source('~/Heart desease project/Script.R', encoding = 'UTF-8', echo=TRUE)
source('~/Heart desease project/Script.R', encoding = 'UTF-8', echo=TRUE)
exp_02
View(heart_data)
source('~/Heart desease project/Script.R', encoding = 'UTF-8', echo=TRUE)
exp_03
source('~/Heart desease project/Script.R', encoding = 'UTF-8', echo=TRUE)
exp_03
source('~/Heart desease project/Script.R', encoding = 'UTF-8', echo=TRUE)
exp_03
source('~/Heart desease project/Script.R', encoding = 'UTF-8', echo=TRUE)
exp_03
?multiplot
??multiplot
source('~/Heart desease project/Script.R', encoding = 'UTF-8', echo=TRUE)
exp_03
source('~/Heart desease project/Script.R', encoding = 'UTF-8', echo=TRUE)
exp_04
source('~/Heart desease project/Script.R', encoding = 'UTF-8', echo=TRUE)
exp_04
source('~/Heart desease project/Script.R', encoding = 'UTF-8', echo=TRUE)
exp_08
exp_08
exp_08 <- heart_data %>% ggplot(aes(x = thalach, fill = target))+
geom_density(alpha = 0.2)+
labs(x ="maximum heart rate achieved")+
theme_bw()
exp_08
exp_10 <- heart_data %>% ggplot(aes(x = target, y = oldpeak, fill = target))+
geom_boxplot()+
labs(x = "target", y = "ST depression induced by exercise relative to rest")+
theme_bw()
exp_10
exp_09 <- heart_data %>% ggplot(aes(x = exang, fill = target))+
geom_bar(position = "fill")+
labs(x="exercise induced angina")+
theme_bw()
exp_09
source('~/Heart desease project/Script.R', encoding = 'UTF-8', echo=TRUE)
exp_09
exp_11 <- heart_data %>% ggplot(aes(x = slope, fill = target))+
geom_bar(position = "fill")+
labs(x = "Slope of the peak exercise ST segment")+
theme_bw()
exp_11
exp_12 <- heart_data %>% ggplot(aes(x = as.factor(ca), fill = target))+
geom_bar()+
labs(x = "n of major blood vessels shown in flouroscopy")+
theme_bw()
exp_12
View(exp_01)
exp_01
source('~/Heart desease project/Script.R', encoding = 'UTF-8', echo=TRUE)
exp_01
?colnames
source('~/Heart desease project/Script.R', encoding = 'UTF-8', echo=TRUE)
View(heart_data)
exp_01
exp_01 <- heart_data %>% ggplot(aes(x = target, y = age,  col = target))+
geom_jitter()+
labs(x = "target", y = "age of the patients")+
theme_bw()
exp_02 <- heart_data %>% ggplot(aes(x = sex, fill = target))+
geom_bar()+
labs(x = "sex of patient")+
theme_bw()
source('~/Heart desease project/Script.R', encoding = 'UTF-8', echo=TRUE)
exp_13 < heart_data %>% ggplot(aes(x = thal, fill = target))+
geom_bar(position = "fill")+
labs(x = "thallium test results")
exp_13 <- heart_data %>% ggplot(aes(x = thal, fill = target))+
geom_bar(position = "fill")+
labs(x = "thallium test results")
exp_13
?mean
View(forest_fit)
forest_fit
forest_fit[["pred"]]
source('~/Heart desease project/Script.R', encoding = 'UTF-8', echo=TRUE)
source('~/Heart desease project/Script.R', encoding = 'UTF-8', echo=TRUE)
View(models)
ens_fit <- mean(models)
models <- as.tibble(glm=predict(object = glm_fit, newdata = test_set[,1:13],test_set$target, type = "prob"),
tree=predict(object = rpart_fit, newdata = test_set[,1:13],test_set$target, type = "prob"),
forest=predict(object = forest_fit, newdata = test_set[,1:13],test_set$target, type = "prob"))
ens_fit <- rowMeans(models)
ens_acc <- mean(ens_fit==heart_data$target)
ens_acc
models
models <- as.tibble(glm=predict(object = glm_fit, newdata = test_set[,1:13],test_set$target, type = "prob"),
tree=predict(object = rpart_fit, newdata = test_set[,1:13],test_set$target, type = "prob"),
forest=predict(object = forest_fit, newdata = test_set[,1:13],test_set$target, type = "prob"))
models <- as.tibble(glm = predict(object = glm_fit, newdata = test_set[,1:13],test_set$target, type = "prob"),
tree = predict(object = rpart_fit, newdata = test_set[,1:13],test_set$target, type = "prob"),
forest = predict(object = forest_fit, newdata = test_set[,1:13],test_set$target, type = "prob"))
models <- as.data.frame(glm = predict(object = glm_fit, newdata = test_set[,1:13],test_set$target, type = "prob"),
tree = predict(object = rpart_fit, newdata = test_set[,1:13],test_set$target, type = "prob"),
forest = predict(object = forest_fit, newdata = test_set[,1:13],test_set$target, type = "prob"))
?as.data.frame
class(predict(object = glm_fit, newdata = test_set[,1:13],test_set$target, type = "prob"))
models <- data.frame(glm = predict(object = glm_fit, newdata = test_set[,1:13],test_set$target, type = "prob"),
tree = predict(object = rpart_fit, newdata = test_set[,1:13],test_set$target, type = "prob"),
forest = predict(object = forest_fit, newdata = test_set[,1:13],test_set$target, type = "prob"))
models
?predict
models("glm","rpart","rf")
fits <- lapply(models, function(model){
train(x = train_set[,1:13],y = train_set$target, method = model)
})
names(fits) <- models
p_models <- sapply(fits, function(model){
predict(object = model, newdata = test_set[,1:13],test_set$target)
})
source('~/Heart desease project/Script.R', encoding = 'UTF-8', echo=TRUE)
source('~/Heart desease project/Script.R', encoding = 'UTF-8', echo=TRUE)
source('~/Heart desease project/Script.R', encoding = 'UTF-8', echo=TRUE)
source('~/Heart desease project/Script.R', encoding = 'UTF-8', echo=TRUE)
p_models
View(p_models)
source('~/Heart desease project/Script.R', encoding = 'UTF-8', echo=TRUE)
source('~/Heart desease project/Script.R', encoding = 'UTF-8', echo=TRUE)
probs
rowMeans(p_models)
rowMeans(p_models == "yes")
source('~/Heart desease project/Script.R', encoding = 'UTF-8', echo=TRUE)
p_models
source('~/Heart desease project/Script.R', encoding = 'UTF-8', echo=TRUE)
prediction
rm(ens_fit)
source('~/Heart desease project/Script.R', encoding = 'UTF-8', echo=TRUE)
source('~/Heart desease project/Script.R', encoding = 'UTF-8', echo=TRUE)
final_accs <- c(predict_heart(validation_set),
mean(test_set$target == predict(object = glm_fit, newdata = validation_set[,1:13],
validation_set$target, type = "raw")),
mean(test_set$target == predict(object = rpart_fit, newdata = validation_set[,1:13],
validation_set$target, type = "raw")),
mean(test_set$target == predict(object = forest_fit, newdata = validation_set[,1:13],
validation_set$target, type = "raw"))
)
?predict
final_accs <- c(predict_heart(validation_set),
mean(validation_set$target == predict(object = glm_fit, newdata = validation_set[,1:13],
validation_set$target, type = "raw")),
mean(validation_set$target == predict(object = rpart_fit, newdata = validation_set[,1:13],
validation_set$target, type = "raw")),
mean(validation_set$target == predict(object = forest_fit, newdata = validation_set[,1:13],
validation_set$target, type = "raw"))
)
importance(forest_fit)
library(tidyverse)
library(ggplot2)
library(caret)
library(randomForest)
library(rpart)
library(broom)
library(purrr)
library(gam)
importance(forest_fit)
exp_13
